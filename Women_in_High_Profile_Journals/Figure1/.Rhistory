female_first <- table_first["female"] / n_first * 100
female_last <- table_last["female"] / n_last * 100
return(c(female_first, female_last, n_first, n_last))
}
# Create data frame with percent female information
percent_female = data.frame(unname(t(sapply(file_names, filter_file))))
colnames(percent_female) <- c("female_first", "female_last", "n_first", "n_last")
percent_female$journal <- gsub("_", " ", gsub(".csv", "", file_names))
setwd("/Applications/GitHub/Women_In_high_profile_journal/meh")
setwd("/Applications/GitHub/Women_In_high_profile_journal/meh/Figure1")
# Read in names of data files in folder
file_names <- list.files(pattern = "*.csv")
file_names <- file_names[!grepl("Genderized", file_names)]
filter_file <- function(csvfile) {
file <- read.csv(csvfile, stringsAsFactors = FALSE)
# filter to articles with abstract
file <- file[as.logical(file$abstract), ]
# Create tables for first and last female author counts
table_first <- table(file$gender_first)
table_last  <- table(file$gender_last)
# Calculate total number of entries used
n_first <- sum(table_first)
n_last  <- sum(table_last)
# Calculate percentage female
female_first <- table_first["female"] / n_first * 100
female_last <- table_last["female"] / n_last * 100
return(c(female_first, female_last, n_first, n_last))
}
# Create data frame with percent female information
percent_female = data.frame(unname(t(sapply(file_names, filter_file))))
colnames(percent_female) <- c("female_first", "female_last", "n_first", "n_last")
percent_female$journal <- gsub("_", " ", gsub(".csv", "", file_names))
# Set your folder name here
impact_factor <- read.csv("ThomasReutersImpactFactor.csv", stringsAsFactors = FALSE)
setwd("..")
# Set your folder name here
impact_factor <- read.csv("ThomasReutersImpactFactor.csv", stringsAsFactors = FALSE)
# Merge with percentage female, to make scatter dataset
scatter <- merge(impact_factor, percent_female, by = "journal", all = TRUE)
View(scatter)
View(scatter)
percent_female
csvfile = file_names[1]
file <- read.csv(csvfile, stringsAsFactors = FALSE)
setwd("Figure1/")
file <- read.csv(csvfile, stringsAsFactors = FALSE)
View(file)
filter_file <- function(csvfile) {
file <- read.csv(csvfile, stringsAsFactors = FALSE)
# filter to articles with abstract
file <- file[as.logical(file$abstract), ]
file <- file[file$year >= 2005, ]
# Create tables for first and last female author counts
table_first <- table(file$gender_first)
table_last  <- table(file$gender_last)
# Calculate total number of entries used
n_first <- sum(table_first)
n_last  <- sum(table_last)
# Calculate percentage female
female_first <- table_first["female"] / n_first * 100
female_last <- table_last["female"] / n_last * 100
return(c(female_first, female_last, n_first, n_last))
}
# Create data frame with percent female information
percent_female = data.frame(unname(t(sapply(file_names, filter_file))))
colnames(percent_female) <- c("female_first", "female_last", "n_first", "n_last")
percent_female$journal <- gsub("_", " ", gsub(".csv", "", file_names))
# Set your folder name here
impact_factor <- read.csv("ThomasReutersImpactFactor.csv", stringsAsFactors = FALSE)
setwd("..")
# Set your folder name here
impact_factor <- read.csv("ThomasReutersImpactFactor.csv", stringsAsFactors = FALSE)
# Merge with percentage female, to make scatter dataset
scatter <- merge(impact_factor, percent_female, by = "journal", all = TRUE)
first <- ggplot(data = scatter,
aes(x = impact_5,
y = female_first,
color = journal,
label = journal,
size = n_first * 10)) +
theme_bw() +
geom_point(alpha = 0.5) +
scale_size(range = c(5, 50)) +
geom_text_repel(aes(label = journal), size = 6) +
theme(axis.text=element_text(size = 14),
axis.title=element_text(size = 14),
legend.position = "none") +
labs(x = "Impact Factor of Journal",
y = "Percentage Female First Author") +
ylim(10, 55) +
xlim(5, 47)
first
setwd("Figure1")
library(genderizeR)
# Locate all the data .csv files
file_names <- list.files(pattern = "*.csv")
## Function to Delete Middle Initials
## Delete the shorter component in a first name, seperated by space.
remove_middle_name <- function(input) {
output = character(length(input))
tmp <- strsplit(input[input != ""], split = " ")
output[input != ""] = sapply(tmp, function(x) x[which.max(nchar(x))])
return(output)
}
# Genderize First Names of First and Last Authors
extract_fnames <- function(file) {
journal <- read.csv(file, stringsAsFactors = FALSE)
journal$fname_first_trunc <- remove_middle_name(journal$fname_first)
journal$fname_last_trunc  <- remove_middle_name(journal$fname_last)
write.csv(journal, file, row.names = FALSE)
return(with(journal, c(fname_first_trunc, fname_last_trunc)))
}
genderize_fnames <- function(fname, apikey = NULL) {
out <- tryCatch({
findGivenNames(fname, textPrepare = FALSE,
apikey = apikey, progress = TRUE)
}, warning = function(cond) return(NULL),
error = function(cond) return(NULL),
finally = NULL)
return(out)
}
all_fnames <- unlist(sapply(file_names, extract_fnames))
all_fnames <- all_fnames[!duplicated(all_fnames) & all_fnames != ""]
file_anesm
file_names
file_names[1:9]
file_names[1:10]
file_names[1:11]
file_names[1:5]
file_names[1:6]
file_names[c(1:5, 7:16)]
file_names = file_names[c(1:5, 7:16)]
file_names
all_fnames <- unlist(sapply(file_names, extract_fnames))
all_fnames <- all_fnames[!duplicated(all_fnames) & all_fnames != ""]
data = read.csv("Genderized_First_Names.csv", stringsAsFactors = FALSE)
data$name
tmp = data$name
all_fnames
indx = all_fnames %in% tmp
sum(indx)
all_fnames = all_fnames[!all_fnames]
all_fnames = all_fnames[!indx]
save(all_fnames, genderize_fnames, "Remaining_fnames.RData")
save(all_fnames, genderize_fnames, file ="Remaining_fnames.RData")
setwd("../..")
setwd("Figure1")
# Clear workspace
rm(list = ls())
library(genderizeR)
# Set the working directory
setwd("YourWorkingDirectory/Figure1")
# Locate all the data .csv files
file_names <- list.files(pattern = "*.csv")
files_names = file_names[c(1:5, 7:16)]
file_names = file_names[c(1:5, 7:16)]
rm(files_names)
file_names
all_fnames <- unlist(sapply(file_names, extract_fnames))
## Function to Delete Middle Initials
## Delete the shorter component in a first name, seperated by space.
remove_middle_name <- function(input) {
output = character(length(input))
tmp <- strsplit(input[input != ""], split = " ")
output[input != ""] = sapply(tmp, function(x) x[which.max(nchar(x))])
return(output)
}
# Genderize First Names of First and Last Authors
extract_fnames <- function(file) {
journal <- read.csv(file, stringsAsFactors = FALSE)
journal$fname_first_trunc <- remove_middle_name(journal$fname_first)
journal$fname_last_trunc  <- remove_middle_name(journal$fname_last)
write.csv(journal, file, row.names = FALSE)
return(with(journal, c(fname_first_trunc, fname_last_trunc)))
}
genderize_fnames <- function(fname, apikey = NULL) {
out <- tryCatch({
findGivenNames(fname, textPrepare = FALSE,
apikey = apikey, progress = TRUE)
}, warning = function(cond) return(NULL),
error = function(cond) return(NULL),
finally = NULL)
return(out)
}
all_fnames <- unlist(sapply(file_names, extract_fnames))
all_fnames <- all_fnames[!duplicated(all_fnames) & all_fnames != ""]
data = read.csv("Genderized_First_Names.csv", stringsAsFactors = FALSE)
indx = all_fnames %in% data$name
all_fnames = all_fnames[!indx]
head(all_fnames)
indx1 = data$name %in% all_fnames
all_fnames <- unlist(sapply(file_names, extract_fnames))
all_fnames <- all_fnames[!duplicated(all_fnames) & all_fnames != ""]
indx = all_fnames %in% data$name
indx2 = data$name %in% all_fnames
rm(indx1)
sum(indx2)
data$name[indx2]
data$name[~indx2]
data$name[!indx2]
data$name[!indx2]
tolower(all_fnames)
a = tolower(all_fnames)
all_fnames == "lazier"
sum(all_fnames == "lazier")
help(grel)
help(grepl)
grep("lazier", a)
a[33756]
rm(a)
clc
clc
data$name[indx2]
data$name[!indx2]
data[!indx2, ]
clc
data[indx2]
data[indx2, ]
data = data[indx2, ]
View(data)
write.csv("Genderized_First_Names.csv", row.names = FALSE)
write.csv(data, "Genderized_First_Names.csv", row.names = FALSE)
rm(data)
rm(indx2)
all_fnames[indx]
all_fnames[!indx]
all_fnames = all_fnames[!indx]
rm(indx)
save(all_fnames, genderize_fnames, file = "Remaining_fnames.RData")
all_fnames <- split(all_fnames, ceiling(seq_along(all_fnames)/200))
gender_fnames <- lapply(all_fnames, genderize_fnames,
"fc781cb8f0434484fc8cce60c939dc67")
indx = sapply(is.null, gender_fnames)
indx = sapply(gender_fnames, is.null)
sum(indx)
all_fname[indx]
all_fnames[indx]
tmp = all_fnames[indx]
names(tmp)
gender_fnames <- do.call(rbind, gender_fnames)
jesus = gender_fnames
gender_fnames <- lapply(all_fnames[95:96], genderize_fnames,
"fc781cb8f0434484fc8cce60c939dc67")
sapply(gender_fnames, is.null)
gender_fnames <- do.call(rbind, gender_fnames)
cbind(gender_fnames, jesus)
rbind(gender_fnames, jesus)
gender_fnames = rbind(gender_fnames, jesus)
rm(jesus)
rm(tmp)
View(gender_fnames)
gender_fnames <- gender_fnames[order(gender_fnames$name), ]
View(gender_fnames)
data = read.csv("Genderized_First_Names.csv", stringsAsFactors = )
data = read.csv("Genderized_First_Names.csv", stringsAsFactors = FALSE)
rbind(gender_fnames, data)
gender_fnames = rbind(gender_fnames, data)
rm(data)
gender_fnames <- gender_fnames[order(gender_fnames$name), ]
write.csv(gender_fnames, "Genderized_First_Names.csv", row.names = FALSE)
all_fnames = unlist(all_fnames)
all_fnames %in% gender_fnames$name
sum(all_fnames %in% gender_fnames$name)
indx = all_fnames %in% gender_fnames$name
all_fnames = all_fnames[!indx]
save(all_fnames, genderize_fnames, file = "Remaining_fnames.RData")
rm(indx)
View(gender_fnames)
all_fnames <- all_fnames[!duplicated(all_fnames) & all_fnames != ""]
all_fnames <- split(all_fnames, ceiling(seq_along(all_fnames)/200))
all_fnames[1]
all_fnames[[1]]
all_fnames = unlist(all_fnames)
names(all_fnames) = NULL
all_fnames
sort(all_fnames)
all_fnames == "Aastha"
sum(all_fnames == "Aastha")
sum(all_fnames == "Aavishkar")
sum(all_fnames == "Aavishkar")
clc
all_fnames <- split(all_fnames, ceiling(seq_along(all_fnames)/200))
View(all_fnames)
# Clear workspace
rm(list = ls())
# Locate all the data .csv files
file_names <- list.files(pattern = "*.csv")
file_names <- file_names[!grepl("Genderized", file_names)]
gender_file <- read.csv("Genderized_First_Names.csv", stringsAsFactors = FALSE)
join_gender_fnames <- function(file, gender_file) {
journal <- read.csv(file, stringsAsFactors = FALSE)
colnames(gender_file) <- c("fname_first_trunc", "gender_first", "p_first", "n_first")
journal <- left_join(journal, gender_file, by = "fname_first_trunc")
colnames(gender_file) <- gsub("first", "last", colnames(gender_file))
journal <- left_join(journal, gender_file, by = "fname_last_trunc")
colnames(journal) <- gsub("\\.(x|y)", "", colnames(journal))
journal <- journal[, unique(colnames(journal))]
write.csv(journal, file, row.names = FALSE)
}
for (i in 1:length(file_names)) {
join_gender_fnames(file_names[i], gender_file)
}
library(dplyr)
for (i in 1:length(file_names)) {
join_gender_fnames(file_names[i], gender_file)
}
return(out)
# Genderize First Name, if unsuccessful throws NULL
genderize_fnames <- function(fname, apikey = NULL) {
out <- tryCatch({
genderized <- findGivenNames(fname, textPrepare = FALSE,
apikey = apikey, progress = TRUE)
}, warning = function(cond) return(genderized),
error = function(cond) return(genderized),
finally = NULL)
return(out)
}
load("Remaining_fnames.RData")
# Genderize First Name, if unsuccessful throws NULL
genderize_fnames <- function(fname, apikey = NULL) {
out <- tryCatch({
genderized <- findGivenNames(fname, textPrepare = FALSE,
apikey = apikey, progress = TRUE)
}, warning = function(cond) return(genderized),
error = function(cond) return(genderized),
finally = NULL)
return(out)
}
all_fnames <- split(all_fnames, ceiling(seq_along(all_fnames)/200))
gender_fnames <- lapply(all_fnames[100:105], genderize_fnames,
"fc781cb8f0434484fc8cce60c939dc67")
gender_fnames
all_fnames = unlist(all_fnames)
save(all_fnames, genderize_fnames, file = "Remaining_fnames.RData")
# Clear workspace
rm(list = ls())
# Read in names of data files in folder
file_names <- list.files(pattern = "*.csv")
file_names <- file_names[!grepl("Genderized", file_names)]
# Calculate female author/(female author + male author) for all journals
filter_file <- function(csvfile) {
file <- read.csv(csvfile, stringsAsFactors = FALSE)
# filter to articles with abstract
file <- file[as.logical(file$abstract), ]
# Create tables for first and last female author counts
table_first <- table(file$gender_first)
table_last  <- table(file$gender_last)
# Calculate total number of entries used
n_first <- sum(table_first)
n_last  <- sum(table_last)
# Calculate percentage female
female_first <- table_first["female"] / n_first * 100
female_last <- table_last["female"] / n_last * 100
return(c(female_first, female_last, n_first, n_last))
}
# Create data frame with percent female information
percent_female = data.frame(unname(t(sapply(file_names, filter_file))))
colnames(percent_female) <- c("female_first", "female_last", "n_first", "n_last")
percent_female$journal <- gsub("_", " ", gsub(".csv", "", file_names))
percent_female
setwd("..")
# Set your folder name here
impact_factor <- read.csv("ThomasReutersImpactFactor.csv", stringsAsFactors = FALSE)
# Set your folder name here
impact_factor <- read.csv("ThomasReutersImpactFactor.csv", stringsAsFactors = FALSE)
# Merge with percentage female, to make scatter dataset
scatter <- merge(impact_factor, percent_female, by = "journal", all = TRUE)
first <- ggplot(data = scatter,
aes(x = impact_5,
y = female_first,
color = journal,
label = journal,
size = n_first * 10)) +
theme_bw() +
geom_point(alpha = 0.5) +
scale_size(range = c(5, 50)) +
geom_text_repel(aes(label = journal), size = 6) +
theme(axis.text=element_text(size = 14),
axis.title=element_text(size = 14),
legend.position = "none") +
labs(x = "Impact Factor of Journal",
y = "Percentage Female First Author") +
ylim(10, 55) +
xlim(5, 47)
first
with(scatter, cor(female_first, impact_5, use = "complete.obs", method = "spearman"))
last <- ggplot(scatter,
aes(x = impact_5,
y = female_last,
color = journal,
label = journal,
size = n_last * 10)) +
theme_bw() +
geom_point(alpha = 0.5) +
scale_size(range = c(5, 50)) +
geom_text_repel(aes(label = journal), size = 6) +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
legend.position = "none") +
labs(x = "Impact Factor of Journal",
y = "Percentage Female Last Author") +
ylim(10, 55) +
xlim(5, 47)
last
with(scatter, cor(female_last, impact_5, use = "complete.obs", method = "spearman"))
load("/Applications/GitHub/Women_In_high_profile_journal/Figure1/Remaining_fnames.RData")
length(all_fnames)
setwd("Figure1")
file_names <- list.files(pattern = "*.csv")
file_names <- file_names[!grepl("Genderized", file_names)]
rm(list = ls())
file_names <- list.files(pattern = "*.csv")
file_names <- file_names[!grepl("Genderized", file_names)]
csv <- read.csv(file_names[1], stringsAsFactors = FALSE)
View(csv)
csv$gender_first
a = is.na(csv$gender_first)
a = 0
n = 0
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[1], stringsAsFactors = FALSE)
a = a + is.na(csv$gender_first)
n = n + length(csv$gender_first)
}
a = 0
n = 0
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[1], stringsAsFactors = FALSE)
a = a + sum(is.na(csv$gender_first))
n = n + length(csv$gender_first)
}
a/ n
a = 0
n = 0
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[1], stringsAsFactors = FALSE)
a = a + sum(is.na(csv$gender_last))
n = n + length(csv$gender_last)
}
a/n
csv$fname_last
csv$fname_last == ""
sum(csv$fname_last == "")
View(csv)
a = 0
n = 0
for (i in 1:length(file_names)) {
csv <- read.csv(file_names, stringsAsFactors = FALSE)
csv <- csv[csv$]
a = a + sum(is.na(csv$gender_last))
n = n + length(csv$gender_last)
}
a = 0
n = 0
for (i in 1:length(file_names)) {
csv <- read.csv(file_names, stringsAsFactors = FALSE)
a = a + sum(is.na(csv$gender_first))
n = n + length(csv$gender_first)
}
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[i], stringsAsFactors = FALSE)
a = a + sum(is.na(csv$gender_first))
n = n + length(csv$gender_first)
}
a/n
a = 0
n = 0
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[i], stringsAsFactors = FALSE)
a = a + sum(is.na(csv$gender_last))
n = n + length(csv$gender_last)
}
a/n
View(csv)
csvc$fname_last
csv$fname_last
csv$fname_last == ""
sum(csv$fname_last == "")
View(csv)
rm(list = ls())
file_names <- list.files(pattern = "*.csv")
file_names <- file_names[!grepl("Genderized", file_names)]
i = 1
csv <- read.csv(file_names[i], stringsAsFactors = FALSE)
View(csv)
col.names(csv)
colnames(csv)
View(csv)
csv <- csv[, 1:12]
View(csv)
colnames(csv) = c("X", "journal", "year", "title", "fname_first", "fname_last",
"lname_first", "lname_last", "affiliation", "article_type",
"middle_authors", "abstract")
View(csv)
help(write.csv)
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[i], stringsAsFactors = FALSE)
csv <- csv[, 1:12]
colnames(csv) = c("X", "journal", "year", "title", "fname_first", "fname_last",
"lname_first", "lname_last", "affiliation", "article_type",
"middle_authors", "abstract")
write.csv(csv, file = file_namess[i], row.names = FALSE)
}
write.csv(csv, file = file_names[i], row.names = FALSE)
for (i in 1:length(file_names)) {
csv <- read.csv(file_names[i], stringsAsFactors = FALSE)
csv <- csv[, 1:12]
colnames(csv) = c("X", "journal", "year", "title", "fname_first", "fname_last",
"lname_first", "lname_last", "affiliation", "article_type",
"middle_authors", "abstract")
write.csv(csv, file = file_names[i], row.names = FALSE)
}
